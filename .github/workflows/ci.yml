name: 'ci'

on:
  pull_request:
    branches: [main, ci-test]
  push:
    branches: [main, ci-test]

jobs:
  install-dependencies:
    name: Install Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Check out current commit
        uses: actions/checkout@v2

      - name: Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: 18

      - name: Compute dependency cache key
        id: compute_lockfile_hash
        run: echo "::set-output name=hash::${{ hashFiles('package-lock.json') }}"

      - name: Check dependency cache
        uses: actions/cache@v2
        id: cache_dependencies
        with:
          path: ${{ env.CACHED_DEPENDENCY_PATHS }}
          key: ${{ steps.compute_lockfile_hash.outputs.hash }}

      - name: Install dependencies
        if: steps.cache_dependencies.outputs.cache-hit == ''
        run: npm install
    outputs:
      dependency_cache_key: ${{ steps.compute_lockfile_hash.outputs.hash }}

  check_lint:
    name: Check Lint
    runs-on: ubuntu-latest
    needs: install_dependencies
    steps:
      - name: Check out current commit
        uses: actions/checkout@v2

      - name: Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: 18

      - name: Check Lint
        run: pnpm run lint

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: install_dependencies
    steps:
      - name: Check out current commit
        uses: actions/checkout@v2

      - name: Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: 18

      - name: Check dependency cache
        uses: actions/cache@v2
        with:
          path: ${{ env.CACHED_DEPENDENCY_PATHS }}
          key: ${{ needs.install_dependencies.outputs.dependency_cache_key }}

      - name: Check build cache
        uses: actions/cache@v2
        id: cache_built_packages
        with:
          path: ${{ env.CACHED_BUILD_PATHS }}
          key: ${{ env.BUILD_CACHE_KEY }}

      - name: Build
        if: steps.cache_built_packages.outputs.cache-hit == ''
        run: pnpm run build
    outputs:
      dependency_cache_key: ${{ needs.install_dependencies.outputs.dependency_cache_key }}
